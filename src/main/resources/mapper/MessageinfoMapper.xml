<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zwxq.mapper.MessageinfoMapper" >
  <resultMap id="BaseResultMap" type="com.zwxq.bean.MessageInfo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="result" property="result" jdbcType="INTEGER" />
    <result column="errmsg" property="errmsg" jdbcType="VARCHAR" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="createdate" property="createdate" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, result, errmsg, mobile, createdate
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zwxq.bean.MessageinfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from messageinfo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from messageinfo
    where id = #{id,jdbcType=INTEGER}
  </select>

  <!--分页查-->
  <select id="findAllLimit" resultMap="BaseResultMap"  >
    select
    <include refid="Base_Column_List" />
    from messageinfo
    <if test="msg != null" >
      WHERE errmsg LIKE #{msg}
    </if>
    ORDER BY createdate DESC
    LIMIT #{mesVo.start},#{mesVo.rows}
  </select>

  <!--查总数-->
  <select id="totalCount" resultType="java.lang.Integer"  >
    SELECT COUNT(1) FROM messageinfo
  </select>


  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from messageinfo
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zwxq.bean.MessageinfoExample" >
    delete from messageinfo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zwxq.bean.MessageInfo" >
    insert into messageinfo (id, result, errmsg, 
      mobile, createdate)
    values (#{id,jdbcType=INTEGER}, #{result,jdbcType=INTEGER}, #{errmsg,jdbcType=VARCHAR}, 
      #{mobile,jdbcType=VARCHAR}, NOW())
  </insert>
  <insert id="insertSelective" parameterType="com.zwxq.bean.MessageInfo" >
    insert into messageinfo
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="result != null" >
        result,
      </if>
      <if test="errmsg != null" >
        errmsg,
      </if>
      <if test="mobile != null" >
        mobile,
      </if>
      <if test="createdate != null" >
        createdate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="result != null" >
        #{result,jdbcType=INTEGER},
      </if>
      <if test="errmsg != null" >
        #{errmsg,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="createdate != null" >
        #{createdate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zwxq.bean.MessageinfoExample" resultType="java.lang.Integer" >
    select count(*) from messageinfo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update messageinfo
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.result != null" >
        result = #{record.result,jdbcType=INTEGER},
      </if>
      <if test="record.errmsg != null" >
        errmsg = #{record.errmsg,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null" >
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.createdate != null" >
        createdate = #{record.createdate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update messageinfo
    set id = #{record.id,jdbcType=INTEGER},
      result = #{record.result,jdbcType=INTEGER},
      errmsg = #{record.errmsg,jdbcType=VARCHAR},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      createdate = #{record.createdate,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zwxq.bean.MessageInfo" >
    update messageinfo
    <set >
      <if test="result != null" >
        result = #{result,jdbcType=INTEGER},
      </if>
      <if test="errmsg != null" >
        errmsg = #{errmsg,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="createdate != null" >
        createdate = #{createdate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zwxq.bean.MessageInfo" >
    update messageinfo
    set result = #{result,jdbcType=INTEGER},
      errmsg = #{errmsg,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      createdate = #{createdate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>